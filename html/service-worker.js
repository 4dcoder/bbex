"use strict";var precacheConfig=[["/index.html","6d5247acd0dbc6530fe9edb7b88e4384"],["/static/css/main.86f846cd.css","86f846cdb61ac40544ac3d8cb8cfff17"],["/static/js/0.ac989fa1.chunk.js","c334372bce40df8eba7fe3473670ec91"],["/static/js/1.166f645f.chunk.js","4edf28ce29dfd5c00cb4a707d73ee4f2"],["/static/js/10.b2418c82.chunk.js","bcc3efb696488bde1a512658d5686153"],["/static/js/11.7620b10b.chunk.js","a9343303b02983982d0e69538c9d1980"],["/static/js/12.0cf5dde2.chunk.js","ae0a353851789bb794bf2669a646ccc7"],["/static/js/13.0e259b1c.chunk.js","00d83eeac502bff5222ccbe76f87a7b2"],["/static/js/14.6fdeae5d.chunk.js","74b6ef1d681588201f7754cb698b9dfd"],["/static/js/15.15af7524.chunk.js","0472fcb3855fdc38677612fc71fe2cd1"],["/static/js/16.ac66a4ed.chunk.js","f594725a4a7be3d6de8ab564bb1425c4"],["/static/js/17.cd0afc05.chunk.js","2bb2c188fa9f85eb9dd98c83fc701c2e"],["/static/js/18.59e0b812.chunk.js","a206a72b279d9721cfb1128c1e5bd604"],["/static/js/2.4275e1e4.chunk.js","0b2951c8afc123dd993e8fb8c7995181"],["/static/js/3.af10d1c9.chunk.js","3726963033b95963196939dbe5b7c64b"],["/static/js/4.54143c8e.chunk.js","15fad08e68cffd4b50194cd0cca80449"],["/static/js/5.96d2d8df.chunk.js","d6ca079f0e00b1f8c339b42d23f69ed2"],["/static/js/6.3989ab7a.chunk.js","8cdbc560d892a5a65f09d4b88666c265"],["/static/js/7.5a376d2e.chunk.js","91e47cf21830713063ad7ccdca4c4f12"],["/static/js/8.8968e7fb.chunk.js","b7ea1e2b272a97f74e2ba8aa30bf8c99"],["/static/js/9.75ca5497.chunk.js","fdc1f58f7393ffdb0c4c8f527363a267"],["/static/js/main.19d06e19.js","0dbb098ce95899b18b0c2714c1fcd0fa"],["/static/media/card-template.e76a86da.png","e76a86daf9b79536f5b25ec4e414e443"],["/static/media/coin_logos.641ea022.png","641ea0224950583ff79837624e17cdac"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=t),c.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,c,a){var n=new URL(e);return a&&n.pathname.match(a)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(c)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var c=new URL(t).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,c){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return c.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],c=e[1],a=new URL(t,self.location),n=createCacheKey(a,hashParamName,c,/\.\w{8}\./);return[a.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(c){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!c.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var c=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!c.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,c=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,a),e=urlsToCacheKeys.has(c));var n="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(c=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(c)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});